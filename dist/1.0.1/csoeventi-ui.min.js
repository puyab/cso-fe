/*! Csoeventi ui Widget v1.0.1 | MIT License | powerby https://github.com/sajadweb */
class CsoeventiUi{static init(e){let t=new CsoeventiUi(e);return(async()=>{await t.setupEvents(),await t.checkAuth(),t.render()})(),t}constructor(e){this.config=e,this.isOpen=!1,this.user=null,this.id=e?.id||"csoeventi-ui",this.apiUrl=e?.apiUrl||"https://api.csoeventi.com"}log(...e){this.config?.debug&&console.log("CsoeventiUi",e)}render(){this.container=document.createElement("div"),this.container.id="csoeventi-container",this.container.innerHTML=`
        <div class="csoeventi-container" >
         <div class="csoeventi-details-panel">
            <div class="specialist-info">
              Specialist CSO
            </div>
            <h2 class="event-title">Book an appointment with one of our product specialists</h2>
            <div class="event-meta">
              <div class="event-duration">
                <img src="/path/to/clock-icon.svg" alt="Duration Icon" />
                1 hr
              </div>
              <div class="event-web-conf">
                 <img src="/path/to/video-icon.svg" alt="Video Icon" />
                 Web conferencing details provided upon confirmation.
              </div>
            </div>
            <p class="event-description">
              Choose the date and time to book an appointment with a CSO product specialist to find out in detail the news and features of our products.
            </p>
            <a href="#" class="cookie-settings">Cookie settings</a>
         </div>

         <div class="csoeventi-calendar-panel">
           <div class="powered-by">POWERED BY Calendly</div>
           <h3 class="panel-title">Select a Date & Time</h3>
           <div class="calendar-header">
             <button class="nav-arrow prev-month">&lt;</button>
             <span class="current-month-year">May 2025</span>
             <button class="nav-arrow next-month">&gt;</button>
           </div>
           <div class="calendar-days-header">
             <span class="day-label">SUN</span>
             <span class="day-label">MON</span>
             <span class="day-label">TUE</span>
             <span class="day-label">WED</span>
             <span class="day-label">THU</span>
             <span class="day-label">FRI</span>
             <span class="day-label">SAT</span>
           </div>
           <div class="calendar-grid">
             <!-- Calendar days will be inserted here by JavaScript -->
           </div>
            <div class="timezone-selector">
                <img src="/path/to/globe-icon.svg" alt="Timezone Icon" />
                Tehran Time (12:24pm) â–¾
            </div>
         </div>
        </div>
      `,document.getElementById(this.id).innerHTML="",document.getElementById(this.id).appendChild(this.container),this.addEventListeners()}async setupEvents(){var e=await this.loadConfig();this.log(e),this.app=e?.data}getTime(e){var t;return e instanceof Date&&!isNaN(e)?((t=e.getHours())%12||12)+`:${e.getMinutes().toString().padStart(2,"0")} `+(12<=t?"PM":"AM"):(this.log("Invalid Date object"),null)}async checkAuth(){}addEventListeners(){this.container.querySelector(".chat-toggle").addEventListener("click",()=>{this.container.classList.toggle("open")}),this.container.querySelector(".chat-close-btn").addEventListener("click",()=>{this.container.classList.toggle("open")}),this.container.querySelector(".chat-send-btn").addEventListener("click",this.sendMessage.bind(this)),this.container.querySelector("#chat-input").addEventListener("keypress",e=>{"Enter"===e.key&&this.sendMessage()})}async sendMessage(){var e=this.container.querySelector("#chat-input"),t=e.value.trim();if(this.log("message",t),t){this.showTypingIndicator();try{this.renderMessage({text:t,isUser:!0,timestamp:new Date}),e.value="";var s=await(await fetch(this.apiUrl+"/openai/message",{method:"POST",headers:{"Content-Type":"application/json","site-key":this.config?.siteKey},body:JSON.stringify({msg:t})})).json();this.log("data",s),this.renderMessage({text:s.data,isUser:!1,timestamp:new Date})}catch(e){console.error("Error sending message:",e)}this.hideTypingIndicator()}}showTypingIndicator(){var e=this.container.querySelector(".chat-status");e&&(e.style.display="flex")}hideTypingIndicator(){var e=this.container.querySelector(".chat-status");e&&(e.style.display="none")}renderMessage(e){var t=this.container.querySelector(".chat-body"),s=document.createElement("div");s.className="chat-message "+(e.isUser?"user-message":"other-message"),s.innerHTML=`
      ${e.text}
      <span class="message-meta">${this.getTime(e.timestamp)}</span>
    `,t.appendChild(s),t.scrollTop=t.scrollHeight}loadConfig(){return this.log("siteKey",this.config?.siteKey),fetch(this.apiUrl+"/openai",{method:"GET",headers:{accept:"*/*","site-key":this.config?.siteKey}}).then(e=>{if(e.ok)return e.json();throw new Error("HTTP error! status: "+e.status)}).catch(e=>e)}}